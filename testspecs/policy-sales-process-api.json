{
  "openapi": "3.0.1",
  "info": {
    "title": "Policy Service API",
    "description": "API description",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://prushoppe-policy-sales-service"
    }
  ],
  "paths": {
    "/products/{id}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Find product by Id",
        "description": "Returns a single product",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of product to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "core",
            "description": "Return core attributes of a product if core is true",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products/{id}/compute": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "compute rules of this product",
        "description": "",
        "operationId": "compute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of product",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCompute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCompute"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "pru_api_auth": [
              "write:products",
              "read:products"
            ]
          }
        ]
      }
    },
    "/products/{id}/compute/{key}": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Stateful compute rules of this product",
        "description": "",
        "operationId": "computeByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "compute key for product",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCompute"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductComputeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products/{id}/lookup/{key}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get Product lookup by key",
        "description": "Get Product lookup by key",
        "operationId": "getProductLookupByKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "lookup key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductLookupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/proposal": {
      "post": {
        "tags": [
          "proposal"
        ],
        "summary": "submit proposal",
        "description": "",
        "operationId": "proposal",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProposalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProposalResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "pru_api_auth": [
              "write:proposal",
              "read:proposal"
            ]
          }
        ]
      }
    },
    "/customer/{customerId}/document": {
      "post": {
        "tags": [
          "addCustomerDocument"
        ],
        "summary": "add customer document",
        "description": "",
        "operationId": "addCustomerDocument",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDocumentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "pru_api_auth": [
              "write:document",
              "read:document"
            ]
          }
        ]
      }
    },
    "/policies/search": {
      "post": {
        "tags": [
          "Policy"
        ],
        "summary": "Find policies by query criteria",
        "description": "",
        "operationId": "findPoliciesByCriteria",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "pru_api_auth": [
              "search:policies",
              "read:otpUser"
            ]
          }
        ]
      }
    },
    "/customer/pru-leads/contact": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "customer's pruLeads contact information",
        "description": "",
        "operationId": "addCustomerPruLeadsContact",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPruLeadsContactReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer/pru-mall/contact": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "customer's pruMall contact information",
        "description": "",
        "operationId": "addCustomerPruMallContact",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPruMallContactReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer/pru-mall/application": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "customer's pruMall application information",
        "description": "",
        "operationId": "addCustomerPruMallApplication",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPruMallApplicationReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/otps/dpas/verifications": {
      "post": {
        "tags": [
          "Otps"
        ],
        "summary": "get dpas verification codes",
        "description": "get dpas verification codes",
        "operationId": "requestOtp",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DpasSendOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DpasOtpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/otps/dpas/verifications/check": {
      "post": {
        "tags": [
          "Otps"
        ],
        "summary": "verify dpas verification codes",
        "description": "verify dpas verification codes",
        "operationId": "submitOtp",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DpasVerifyOtpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DpasOtpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ocrs/dpas/images/upload": {
      "post": {
        "tags": [
          "Ocrs"
        ],
        "summary": "Uploads Ocr ID images to DPAS",
        "description": "Uploads Ocr ID images to DPAS",
        "operationId": "uploadImages",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageUploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer/{customerId}/dpas-docs": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Set dpas doc id for customer {customerId}",
        "description": "",
        "operationId": "setDpasDocId",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSessionAttrReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "session ID return success",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer/anonymous/sessions": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Set and save a session ID for anonymous customer",
        "description": "",
        "operationId": "setAnonymousSessionId",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSessionAttrReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "session ID return success",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer/anonymous/sessions/{session-id}": {
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "clear user session",
        "description": "",
        "operationId": "cleanUserSession",
        "parameters": [
          {
            "name": "session-id",
            "in": "path",
            "description": "Id of session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "session ID return success",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer/anonymous/sessions/{session-id}/active": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "check session ID for anonymous customer, return true if active, otherwise return false",
        "description": "",
        "operationId": "isSessionActive",
        "parameters": [
          {
            "name": "session-id",
            "in": "path",
            "description": "Id of session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "session ID status",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/customer/{customerId}/terms/conditions": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "update terms condition",
        "description": "",
        "operationId": "updateTermsCondition",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTermsConditionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTermsConditionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "pru_api_auth": [
              "write:document",
              "read:document"
            ]
          }
        ]
      }
    },
    "/customer/{customerId}/terms/conditions/{key}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "query terms condition",
        "description": "",
        "operationId": "searchTermsCondition",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "termsCondition key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "trace-id": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTermsConditionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "pru_api_auth": [
              "write:document",
              "read:document"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CommonResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "responseCode": {
            "type": "object"
          }
        }
      },
      "RequestHeader": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Header"
          },
          {
            "type": "object",
            "properties": {
              "callback": {
                "type": "string",
                "format": "uri"
              },
              "lang": {
                "type": "string"
              },
              "page": {
                "type": "string"
              },
              "pageSize": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Header": {
        "type": "object",
        "properties": {
          "msgId": {
            "type": "string",
            "format": "uuid"
          },
          "timestamp": {
            "type": "string",
            "description": "```Managed by Platform for internal usage```",
            "format": "date-time"
          },
          "source": {
            "type": "string",
            "description": "```Managed by Platform for internal usage```"
          },
          "correlationId": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ResponseStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ResponseHeader": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "status": {
                "$ref": "#/components/schemas/ResponseStatus"
              }
            }
          }
        ]
      },
      "DocumentTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "template": {
            "type": "string",
            "format": "byte"
          }
        },
        "xml": {
          "name": "DocumentTemplate"
        }
      },
      "MutuallyExclusiveComponents": {
        "type": "object",
        "properties": {
          "item": {
            "type": "string"
          }
        }
      },
      "Rule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "functionName": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleParam"
            }
          },
          "script": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Rule"
        }
      },
      "RuleParam": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "xml": {
          "name": "RuleParam"
        }
      },
      "InsuredObject": {
        "type": "object",
        "properties": {
          "object": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "selectionCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rule"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coverage"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          }
        }
      },
      "LangTranslation": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Coverage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "riderRef": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "isRider": {
            "type": "string"
          },
          "event": {
            "$ref": "#/components/schemas/CoverageEvent"
          },
          "Indemnities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Indemnity"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          }
        }
      },
      "CoverageEvent": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "selectionCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rule"
            }
          }
        }
      },
      "Indemnity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "addition": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "selectionCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rule"
            }
          },
          "computes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rule"
            }
          }
        }
      },
      "ProductComputeResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProductCompute"
          }
        }
      },
      "ProductResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Product"
          }
        }
      },
      "Answer": {
        "type": "object"
      },
      "TextAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Answer"
          },
          {
            "type": "object",
            "properties": {
              "text": {
                "type": "string"
              }
            }
          }
        ]
      },
      "OptionAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Answer"
          },
          {
            "type": "object",
            "properties": {
              "selectedOptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AnswerOption"
                }
              }
            }
          }
        ]
      },
      "BooleanAnswer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Answer"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ProductAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "dataType": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "behaviours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBehaviour"
            }
          }
        }
      },
      "WorkoutType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "equipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkoutEquipment"
            }
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Label"
            }
          }
        }
      },
      "WorkoutEquipment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Label"
            }
          }
        }
      },
      "Label": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "longDescription": {
            "type": "string"
          },
          "instructions": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "urls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TransactionContext": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "transaction": {
            "type": "string",
            "description": "Mandatory Attribute - For /product/{id}/compute/availability"
          },
          "transactionRole": {
            "type": "string"
          },
          "transactionChannel": {
            "type": "string"
          }
        }
      },
      "SalesPartner": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Channel"
            }
          }
        }
      },
      "Channel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          }
        }
      },
      "Compute": {
        "type": "object",
        "properties": {
          "allFunctionsDefinitions": {
            "type": "string"
          },
          "functionGroups": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "tables": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Audit": {
        "type": "object",
        "properties": {
          "createTime": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "updateTime": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "createdBy": {
            "type": "string",
            "description": "Name or IP of the calling client or the interface initiating the request"
          },
          "updatedBy": {
            "type": "string",
            "description": "Name or IP of the calling client or the interface initiating the request"
          }
        },
        "xml": {
          "name": "Audit"
        }
      },
      "ProductBehaviour": {
        "type": "object",
        "properties": {
          "transactionContextRef": {
            "$ref": "#/components/schemas/TransactionContext"
          },
          "display": {
            "type": "object",
            "properties": {
              "hidden": {
                "type": "boolean"
              },
              "displayIndex": {
                "type": "number"
              },
              "visibleInCatalog": {
                "type": "boolean"
              },
              "displayName": {
                "type": "string"
              }
            }
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "displayValue": {
                  "type": "string"
                },
                "displayIndex": {
                  "type": "number"
                },
                "value": {
                  "type": "string"
                },
                "default": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "ProposalResult": {
        "type": "object",
        "properties": {
          "proposalNo": {
            "type": "string"
          },
          "clients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ProposalResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProposalResult"
          }
        }
      },
      "ProposalRequest": {
        "properties": {
          "operation": {
            "type": "string"
          },
          "body": {
            "$ref": "#/components/schemas/Proposal"
          }
        }
      },
      "ProductLookupResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          }
        }
      },
      "AddDocumentRequest": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "AddDocumentResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AddDocumentResult"
          }
        }
      },
      "AddDocumentResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        }
      },
      "PolicyRequest": {
        "properties": {
          "operation": {
            "type": "string"
          },
          "body": {
            "$ref": "#/components/schemas/Query"
          }
        }
      },
      "PolicyResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Policy"
            }
          }
        }
      },
      "DpasProductResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseHeader"
          }
        ],
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/Product"
          }
        }
      },
      "DpasProductLookupResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseHeader"
          }
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "object"
          }
        }
      },
      "DpasProductComputeResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseHeader"
          }
        ],
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/ProductCompute"
          }
        }
      },
      "DpasProposalResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseHeader"
          }
        ],
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/ProposalResult"
          }
        }
      },
      "DpasAddDocumentResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseHeader"
          }
        ],
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/AddDocumentResult"
          }
        }
      },
      "DpasPolicyResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseHeader"
          }
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Policy"
            }
          }
        }
      },
      "CustomerPruLeadsContactReq": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "DpasSendOtpRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string"
          },
          "body": {
            "type": "object",
            "properties": {
              "attributes": {
                "type": "object",
                "properties": {
                  "operation": {
                    "type": "string"
                  },
                  "productCode": {
                    "type": "string"
                  },
                  "productName": {
                    "type": "string"
                  }
                }
              },
              "channels": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DpasOtpResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DpasOtpResult"
          }
        }
      },
      "DpasOtpResult": {
        "type": "object",
        "properties": {
          "isOTPVerificationSuccessful": {
            "type": "boolean"
          },
          "workflowId": {
            "type": "string"
          }
        }
      },
      "DpasReqOtpResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseHeader"
          }
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          }
        }
      },
      "DpasSubmitOtpResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseHeader"
          }
        ],
        "properties": {
          "body": {
            "$ref": "#/components/schemas/DpasOtpResult"
          }
        }
      },
      "DpasVerifyOtpRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string"
          },
          "workflowId": {
            "type": "string"
          },
          "body": {
            "type": "object",
            "properties": {
              "channel": {
                "type": "string"
              },
              "otp": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserSession": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "dpasDocId": {
            "type": "string"
          },
          "otpPassed": {
            "type": "boolean"
          },
          "updateTime": {
            "type": "string"
          },
          "expiredTime": {
            "type": "string"
          },
          "dpasCustomerMaster": {
            "type": "string"
          },
          "sessionTermsCondition": {
            "type": "object",
            "$ref": "#/components/schemas/SessionTermsCondition"
          }
        }
      },
      "SetSessionAttrReq": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string"
          },
          "dpasDocId": {
            "type": "string"
          },
          "otpPassed": {
            "type": "boolean",
            "nullable": true,
            "default": false
          }
        }
      },
      "SessionIdResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SessionStatus"
          }
        }
      },
      "SessionStatus": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "nullable": true,
            "default": false
          }
        }
      },
      "SessionTermsCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "uuid"
          },
          "version": {
            "type": "string",
            "description": "t&c version customer consents"
          },
          "key": {
            "type": "string",
            "description": "t&c key customer consents"
          },
          "customerId": {
            "type": "string",
            "description": "customer id for DEEN/NeoPulse"
          },
          "consentSource": {
            "type": "string",
            "description": "consent source , enum value of PRUSERVICES, PRUSHOPPE"
          },
          "consent": {
            "type": "string",
            "description": "consent result, enum value includes ACCEPT , REJECT , WEDONTKNOW"
          },
          "consentUserAgent": {
            "type": "string",
            "description": "user agent string of the device used to consent the terms and conditions"
          },
          "consentDate": {
            "type": "string",
            "description": "consent date"
          },
          "createTime": {
            "type": "string",
            "description": "create time"
          },
          "UpdateTime": {
            "type": "string",
            "description": "update time"
          }
        }
      },
      "UpdateTermsConditionRequest": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "t&c version customer consents"
          },
          "key": {
            "type": "string",
            "description": "t&c key customer consents"
          },
          "customerId": {
            "type": "string",
            "description": "customer id for DEEN/NeoPulse"
          },
          "consent": {
            "type": "string",
            "description": "consent result, enum value includes ACCEPT , REJECT , WEDONTKNOW"
          },
          "consentUserAgent": {
            "type": "string",
            "description": "user agent string of the device used to consent the terms and conditions"
          },
          "consentSource": {
            "type": "string",
            "description": "consent source , enum value of PRUSERVICES, PRUSHOPPE"
          }
        }
      },
      "UpdateTermsConditionResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/SessionTermsCondition"
          }
        }
      },
      "QueryTermsConditionResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/SessionTermsCondition"
          }
        }
      },
      "CustomerPruMallContactReq": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          }
        }
      },
      "CustomerPruMallApplicationReq": {
        "type": "object",
        "properties": {
          "customerID": {
            "type": "string"
          },
          "issueDate": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "job": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "ward": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "ImageUploadRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ImageUploadResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DocId"
          }
        }
      },
      "DocId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "DpasUploadImagesResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseHeader"
          }
        ],
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/components/schemas/DocId"
          }
        }
      },
      "PolicyDetailResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Policy"
          }
        }
      },
      "PolicyLinkageInfo": {
        "type": "object",
        "required": [
          "policyNo"
        ],
        "properties": {
          "policyNo": {
            "type": "string"
          }
        }
      },
      "DocumentSearchParam": {
        "type": "object",
        "required": [
          "docId"
        ],
        "properties": {
          "docId": {
            "type": "string"
          }
        }
      },
      "OTPVerificationInfo": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PolicyLinkageInfo"
          },
          {
            "type": "object",
            "properties": {
              "verificationCode": {
                "type": "string"
              }
            }
          }
        ]
      },
      "DocumentsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          }
        }
      },
      "DocumentDetailResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "FundHoldingsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyFundHolding"
            }
          }
        }
      },
      "CustomerLinkageResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomerContactDetailWrap"
          }
        }
      },
      "FinanceValueResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinanceValue"
            }
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "contactDetails": {
            "$ref": "#/components/schemas/ContactDetails"
          }
        }
      },
      "ContactDetails": {
        "type": "object",
        "properties": {
          "phone": {
            "$ref": "#/components/schemas/Contact"
          },
          "email": {
            "$ref": "#/components/schemas/Contact"
          },
          "home": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "CustomerContactDetailWrap": {
        "type": "object",
        "properties": {
          "customerContactDetail": {
            "$ref": "#/components/schemas/ContactDetails"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for product record. It is made up of product code and source system code."
          },
          "code": {
            "type": "string",
            "description": "A unique code of a product"
          },
          "shortName": {
            "type": "string",
            "description": ""
          },
          "fullName": {
            "type": "string",
            "description": "Name of product"
          },
          "desc": {
            "type": "string",
            "description": "Description of product"
          },
          "version": {
            "type": "string",
            "description": "Version no of same type of product"
          },
          "effectiveFrom": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Start data of product"
          },
          "effectiveTo": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Close date of product"
          },
          "category": {
            "type": "string",
            "description": "Category of product. Example: 'ULIP', 'NON-ULIP', 'ULIP-PRUSAVER etc"
          },
          "characteristics": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Features of product"
          },
          "questionaire": {
            "$ref": "#/components/schemas/Questionaire"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductComponent"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "Reference to ProductComponent record."
          },
          "insuredObjs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsuredObject"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "lbu": {
            "$ref": "#/components/schemas/LBU"
          },
          "transactionContext": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionContext"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "productDisplayBehaviour": {
            "$ref": "#/components/schemas/ProductDisplayBehaviour"
          },
          "salesPartner": {
            "$ref": "#/components/schemas/SalesPartner"
          },
          "documentTemplate": {
            "$ref": "#/components/schemas/DocumentTemplate"
          },
          "customerJourney": {
            "$ref": "#/components/schemas/CustomerJourney"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "computes": {
            "$ref": "#/components/schemas/Compute"
          },
          "status": {
            "type": "string",
            "description": "Status of the product. Eg. 'Active', 'Inactive'"
          },
          "tables": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "productType": {
            "type": "string",
            "enum": [
              "ULIP",
              "NON-ULIP",
              "ULIP-PRUSAVER"
            ],
            "description": "Type of product. Example: 'ULIP', 'NON-ULIP', 'ULIP-PRUSAVER'"
          },
          "basePrice": {
            "type": "number",
            "format": "currency",
            "x-dataPolicy": "C4"
          },
          "minPrice": {
            "type": "number",
            "format": "currency",
            "x-dataPolicy": "C4"
          },
          "currency": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "availableQuantity": {
            "type": "number"
          },
          "visualCues": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "taxComponents": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "Tax components of the product. Key is the 2 digit country code, value is map of tax name & Taxation object"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LangTranslation"
            },
            "description": "Language transalation for non static fields. Key is the langauge code, value is map of field & their language tranlation"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "LBU": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "distributingLOB": {
            "type": "string"
          },
          "distributingCurrency": {
            "type": "string"
          }
        }
      },
      "Questionaire": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "questionGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionGroup"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          }
        }
      },
      "QuestionGroup": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "questionSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          }
        }
      },
      "CustomerJourney": {
        "type": "object",
        "properties": {
          "transactionContextRef": {
            "$ref": "#/components/schemas/TransactionContext"
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "journeyId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "eventTriggerAction": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ProductDisplayBehaviour": {
        "type": "object",
        "properties": {
          "transactionContextRef": {
            "$ref": "#/components/schemas/TransactionContext"
          },
          "visibleInFrontCatalog": {
            "type": "string"
          },
          "productGroupName": {
            "type": "string"
          },
          "productDisplayName": {
            "type": "string"
          }
        }
      },
      "AuditDetail": {
        "type": "object",
        "properties": {
          "createTime": {
            "type": "string"
          },
          "updateTime": {
            "type": "string"
          }
        }
      },
      "PolicyFundHolding": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fund": {
            "$ref": "#/components/schemas/Fund"
          },
          "productComponentOption": {
            "$ref": "#/components/schemas/ProductComponentOption"
          },
          "fundPercentage": {
            "type": "number"
          },
          "isTopUp": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "format": "currency"
          },
          "units": {
            "type": "number"
          }
        }
      },
      "FinanceValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "example": "2017-07-21"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "ProductCompute": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          },
          "transactionContext": {
            "$ref": "#/components/schemas/TransactionContext"
          },
          "event": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "description": "Mandatory Attributes - For /product/{id}/compute/availability - code, components[0].attributes.birthDate, components[0].attributes.ktpId, components[0].attributes.email"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "PolicyLinkageInitInfo": {
        "type": "object",
        "required": [
          "linkageMethod",
          "value"
        ],
        "properties": {
          "linkageMethod": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "CustomerLinkageOTPRequest": {
        "type": "object",
        "required": [
          "policyId"
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "policyId": {
            "type": "string"
          }
        }
      },
      "CustomerLinkageOTPVerification": {
        "type": "object",
        "required": [
          "verificationCode"
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "verificationCode": {
            "type": "string"
          }
        }
      },
      "CustomerLinkageInitResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomerLinkageInitBody"
          }
        }
      },
      "CustomerLinkageInitBody": {
        "type": "object",
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerContactWrap"
            }
          }
        }
      },
      "CustomerLinkageOTPResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseStatus"
          }
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OTPResponseBody"
          }
        }
      },
      "OTPResponseBody": {
        "type": "object",
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          }
        }
      },
      "CustomerContactWrap": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          }
        }
      },
      "Query": {
        "type": "object",
        "properties": {
          "projs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filter": {
            "$ref": "#/components/schemas/FilterExpression"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "orderBy": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "prop": {
                  "type": "string"
                },
                "order": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              }
            }
          }
        }
      },
      "FilterExpression": {
        "type": "object",
        "properties": {
          "simpleExpression": {
            "$ref": "#/components/schemas/SimpleExpression"
          },
          "logicalExpression": {
            "$ref": "#/components/schemas/LogicalExpression"
          }
        }
      },
      "LogicalExpression": {
        "type": "object",
        "properties": {
          "expressions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterExpression"
            }
          },
          "op": {
            "type": "string",
            "enum": [
              "and",
              "or",
              "not"
            ]
          }
        }
      },
      "SimpleExpression": {
        "type": "object",
        "properties": {
          "lhs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "op": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/AnyValue"
          }
        }
      },
      "AnyValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object"
          }
        }
      },
      "Proposal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "proposalNo": {
            "type": "string",
            "x-dataPolicy": "C1"
          },
          "parentProposal": {
            "type": "string",
            "x-dataPolicy": "C1",
            "description": "Parent Proposal for Group Policy"
          },
          "policyNumber": {
            "type": "string",
            "description": "Policy Number of the group"
          },
          "scope": {
            "type": "string",
            "enum": [
              "Organization",
              "Family",
              "Individual"
            ]
          },
          "applicationNo": {
            "type": "string",
            "x-dataPolicy": "C1"
          },
          "proposalSignDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "proposalReceivedDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "inceptionDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Represents the effective commencement date."
          },
          "status": {
            "type": "string"
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "description": "Mandatory Attributes - firstName, externalIds.KTP_ID, contactDetails.EMAIL.value, contactDetails.PHONE.value",
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productOption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOption"
            },
            "description": "Mandatory Attributes - totalPremium, totalSumAssured, product.code, options.planName, options.policyTerm, options.policyTermUnit, productComponentOptions.component.code, productComponentOptions.options.totalSumAssured",
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "paymentOption": {
            "$ref": "#/components/schemas/PaymentOption"
          },
          "agent": {
            "$ref": "#/components/schemas/Agent"
          },
          "payments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Payment"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            }
          },
          "questionAnswers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionAnswer"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "priorPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalPolicy"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "questionAnswerGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionAnswerGroup"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "declarations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Beneficiary"
            },
            "description": "Mandatory Attributes customer.firstName",
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "witnesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "signatures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "amountReceived": {
            "type": "number",
            "format": "float"
          },
          "medicalExpenses": {
            "type": "number",
            "format": "float"
          },
          "sourceOfBusiness": {
            "type": "string"
          },
          "uwDecision": {
            "type": "string"
          },
          "uwConsent": {
            "type": "string"
          },
          "uwLoading": {
            "type": "string"
          },
          "uwLoadingReason": {
            "type": "string"
          },
          "uwDecisionDt": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "uwAssessment": {
            "$ref": "#/components/schemas/AssessmentGroup"
          },
          "branch": {
            "type": "string"
          },
          "rejectReason": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RejectReason"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "payers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "lifeAssured": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "description": "Mandatory Attributes firstName, dob, contactDetails.PHONE.value, externalIds.KTP_ID, placeOfBirth, contactDetails.EMAIL.value, addressDetails.Current",
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "type": {
            "type": "string"
          },
          "appointee": {
            "$ref": "#/components/schemas/Customer"
          },
          "assignee": {
            "$ref": "#/components/schemas/Customer"
          },
          "trustee": {
            "$ref": "#/components/schemas/Customer"
          },
          "referrer": {
            "$ref": "#/components/schemas/Party"
          },
          "followUp": {
            "type": "object"
          },
          "consent": {
            "$ref": "#/components/schemas/TermsCondition"
          },
          "dispatchMethod": {
            "type": "string",
            "enum": [
              "physicalPolicy",
              "ePolicy"
            ]
          },
          "dispatchDestination": {
            "$ref": "#/components/schemas/Address"
          },
          "sourceChannel": {
            "$ref": "#/components/schemas/Source"
          },
          "customerRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerRole"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "Array of id references to CustomerRole"
          },
          "auditDetails": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "Customer": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Party"
          },
          {
            "type": "object",
            "properties": {
              "password": {
                "type": "string",
                "format": "password",
                "description": "",
                "x-dataPolicy": "C4"
              },
              "firstName": {
                "type": "string",
                "format": "string",
                "description": "First name of the customer",
                "x-dataPolicy": "C1"
              },
              "surName": {
                "type": "string",
                "format": "string",
                "description": "Sur name of the customer",
                "x-dataPolicy": "C1"
              },
              "middleName": {
                "type": "string",
                "format": "string",
                "description": "Middle Name of the customer",
                "x-dataPolicy": "C1"
              },
              "dob": {
                "type": "string",
                "example": "1970-01-01",
                "description": "Date of Birth of a customer",
                "x-dataPolicy": "C1"
              },
              "dateOfDeath": {
                "type": "string",
                "example": "1970-01-01",
                "description": "The date on which insurance company is liable to pay claim",
                "x-dataPolicy": "C1"
              },
              "startDate": {
                "type": "string",
                "example": "1970-01-01",
                "description": "The date on which a person becomes a customer of Prudential, which is the inception date of the first policy",
                "x-dataPolicy": "C1"
              },
              "sex": {
                "type": "string",
                "format": "string",
                "description": "Gender of a customer",
                "x-dataPolicy": "C1"
              },
              "maritalStatus": {
                "type": "string",
                "description": "Customer marital status at the time of policy applying",
                "x-dataPolicy": "C1"
              },
              "spouse": {
                "$ref": "#/components/schemas/Party"
              },
              "children": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Party"
                },
                "example": [
                  {
                    "id": "string"
                  }
                ],
                "description": "Children belonging to the customer used for customer profile. Children is an object, identify by customer number as key, comprising all relevant attributes of children."
              },
              "salutation": {
                "type": "string",
                "description": "Welcome word for a customer"
              },
              "race": {
                "type": "string"
              },
              "role": {
                "type": "string",
                "enum": [
                  "DIETICIAN",
                  "AGENT",
                  "COACH",
                  "DOCTOR",
                  "MERCHANT",
                  "MEDICAL_REP",
                  "FITNESS_TRAINER"
                ]
              },
              "placeOfBirth": {
                "type": "string",
                "description": ""
              },
              "countryOfBirth": {
                "type": "string",
                "description": ""
              },
              "placeOfDeath": {
                "type": "string",
                "description": "Place of death for death claim"
              },
              "countryOfDeath": {
                "type": "string",
                "description": "Country of death for death claim"
              },
              "nationality": {
                "type": "string",
                "description": "Customer belonging place",
                "x-dataPolicy": "C1"
              },
              "occupation": {
                "$ref": "#/components/schemas/Occupation"
              },
              "policies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Policy"
                },
                "description": "Reference to policy records"
              },
              "claims": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Claim"
                },
                "example": [
                  {
                    "id": "string"
                  }
                ],
                "description": "Reference to claim records"
              },
              "lifestyle": {
                "$ref": "#/components/schemas/CustomerLifestyle"
              },
              "agent": {
                "$ref": "#/components/schemas/Agent"
              },
              "billing": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillingDetail"
                },
                "example": [
                  {
                    "id": "string"
                  }
                ],
                "description": ""
              },
              "complaints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerComplaint"
                },
                "example": [
                  {
                    "id": "string"
                  }
                ],
                "description": ""
              },
              "comms": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Message"
                },
                "example": [
                  {
                    "id": "string"
                  }
                ],
                "description": ""
              },
              "activeGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group"
                },
                "example": [
                  {
                    "id": "string"
                  }
                ],
                "description": ""
              },
              "inActiveGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group"
                },
                "example": [
                  {
                    "id": "string"
                  }
                ],
                "description": ""
              },
              "wallet": {
                "$ref": "#/components/schemas/Wallet"
              },
              "sourceChannel": {
                "$ref": "#/components/schemas/Source"
              },
              "termsConditions": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/TermsCondition"
                },
                "example": {
                  "prop1": {
                    "id": "string"
                  },
                  "prop2": {
                    "id": "string"
                  },
                  "prop3": {
                    "id": "string"
                  }
                },
                "description": ""
              },
              "vaccinations": {
                "type": "string",
                "additionalProperties": {
                  "$ref": "#/components/schemas/Vaccinations"
                },
                "example": {
                  "prop1": {
                    "id": "string"
                  },
                  "prop2": {
                    "id": "string"
                  },
                  "prop3": {
                    "id": "string"
                  }
                },
                "description": "Vaccination details of self or dependents"
              },
              "relations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Relation"
                },
                "example": [
                  {
                    "id": "string"
                  }
                ],
                "description": ""
              },
              "taxExemptFlag": {
                "type": "string",
                "description": "",
                "x-dataPolicy": "C3"
              },
              "vip": {
                "type": "string",
                "description": "Whether a customer is a very important person such as a politician, celebrity, diplomat, etc"
              },
              "staffFlag": {
                "type": "string",
                "description": "Whether a customer is staff of Prudential. This field is set only for Prudential staff.",
                "x-dataPolicy": "C1"
              },
              "customerTaxInfo": {
                "$ref": "#/components/schemas/FATCADetail"
              },
              "assessments": {
                "type": "string",
                "additionalProperties": {
                  "$ref": "#/components/schemas/AssessmentGroup"
                },
                "example": {
                  "prop1": {
                    "id": "string"
                  },
                  "prop2": {
                    "id": "string"
                  },
                  "prop3": {
                    "id": "string"
                  }
                },
                "description": "Assessments for the customer"
              },
              "channel": {
                "type": "string",
                "description": "Choice of registration such as EMAIL, PHONE etc."
              },
              "referral": {
                "$ref": "#/components/schemas/Referral"
              }
            }
          }
        ]
      },
      "ProductOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for Main coverage records. It is made up of policy number, life no, coverage no,  country code and source system code."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "totalPremium": {
            "type": "number",
            "deprecated": true,
            "description": "This is the total amount which is being against the contract made between insurer and insured"
          },
          "totalSumAssured": {
            "type": "number",
            "deprecated": true,
            "description": "This is the Amount, which will be paid in case any unfortunate event happens"
          },
          "paymentFrequency": {
            "type": "string",
            "description": "This is the interval with which Customer has to pay the premium",
            "enum": [
              "yearly",
              "monthly",
              "quaterly",
              "semiannual"
            ]
          },
          "benefitsTerms": {
            "type": "number",
            "description": ""
          },
          "premiumTerm": {
            "type": "number",
            "description": ""
          },
          "commencementDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Date on which Coverage becomes active for the first time",
            "deprecated": true,
            "x-dataPolicy": "C1"
          },
          "loadingPremium": {
            "type": "number",
            "deprecated": true,
            "description": "This is Loading premium, which needs to be paid, if Insured comes under high risk category."
          },
          "status": {
            "type": "string",
            "description": "Status of the Coverage. Eg. Inforce, Lapsed, etc"
          },
          "premiumCessDate": {
            "type": "string",
            "example": "2017-07-21",
            "deprecated": true,
            "description": "After this date, Customer doesnt have to pay any Premium, but still Coverage will be Active"
          },
          "premiumCessTerm": {
            "type": "number",
            "deprecated": true,
            "description": "Number of Years for which Premium needs to be Paid."
          },
          "riskCessDate": {
            "type": "string",
            "example": "2017-07-21",
            "deprecated": true,
            "description": "This is the date, on which Coverage will get expired, after which there is no legal contract remains active."
          },
          "riskCessTerm": {
            "type": "number",
            "deprecated": true,
            "description": "Number of Years for which Customer is covered."
          },
          "installmentPremium": {
            "type": "number",
            "deprecated": true,
            "description": "This is installment amount, which is exclusive of Loading premium if any."
          },
          "mortalityClass": {
            "type": "string",
            "deprecated": true,
            "description": "This is the Rating Class assigned by Insurer, which decides the Risk on insured Life."
          },
          "topUpFlag": {
            "type": "string",
            "deprecated": true,
            "description": "Flag will denote the coverage type,if this is being taken as the topup on existing Coverage."
          },
          "subStandardLife": {
            "type": "string",
            "description": "This is the flag, which denotes if insured falls under risk Category or not"
          },
          "lifeAssured": {
            "$ref": "#/components/schemas/LifeAssured"
          },
          "options": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": ""
          },
          "productComponent": {
            "$ref": "#/components/schemas/ProductComponent"
          },
          "productComponentOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductComponentOption"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "Reference to Rider Components which  are being taken along with Main coverage"
          },
          "extraLoadingDetail": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PremiumLoading"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            },
            "description": "Extra loading of premium is captured"
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "surrenderValue": {
            "type": "number",
            "format": "currency",
            "deprecated": true,
            "description": "Actual amount paid out to customer upon surrender of a policy broken down for base plan and top-ups."
          },
          "surrenderAdjustment": {
            "type": "number",
            "format": "currency",
            "deprecated": true,
            "description": "Any adjustment made over or below the calculated surrender value."
          },
          "premiumStatus": {
            "type": "string",
            "description": ""
          },
          "auditDetails": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "PaymentOption": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "autoRenewal": {
            "type": "boolean"
          },
          "amount": {
            "type": "number",
            "format": "currency"
          },
          "frequency": {
            "type": "string"
          }
        }
      },
      "Agent": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Party"
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "A unique no which is assigned to use as a company representative",
                "x-dataPolicy": "C1"
              },
              "channel": {
                "type": "string",
                "description": "Channel for which agent is working"
              },
              "licenceNo": {
                "type": "string",
                "description": "Official number to work as agent",
                "x-dataPolicy": "C1"
              },
              "licenceExpDate": {
                "type": "string",
                "example": "2017-07-21",
                "description": "Data on which agent licence renewal due"
              },
              "appointmentDate": {
                "type": "string",
                "example": "2017-07-21",
                "description": "Date on which person hired as an agent"
              },
              "terminationDate": {
                "type": "string",
                "example": "2017-07-21",
                "description": "Date on which person release from company"
              },
              "reportingTo": {
                "type": "string",
                "description": "Reference ID to superior "
              },
              "branch": {
                "type": "string",
                "description": "Agent branch name",
                "x-dataPolicy": "C1"
              },
              "office": {
                "type": "string",
                "description": "Agent branch location"
              },
              "zone": {
                "type": "string",
                "description": "Geographical location of the country"
              },
              "education": {
                "type": "string",
                "description": "Qualification of agent",
                "x-dataPolicy": "C1"
              },
              "qualifyingProducts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Product"
                },
                "example": [
                  {
                    "id": "string"
                  }
                ],
                "description": "Reference to product record"
              },
              "supervisor": {
                "$ref": "#/components/schemas/Agent"
              },
              "teams": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Agent"
                },
                "example": [
                  {
                    "id": "string"
                  }
                ],
                "description": ""
              },
              "commissionClass": {
                "type": "string",
                "description": "Eligible for commission"
              },
              "trainings": {
                "type": "string",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "paymentOption": {
                "$ref": "#/components/schemas/PaymentOption"
              }
            }
          }
        ]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "txRef": {
            "type": "string"
          },
          "orderRef": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "mode": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "currency"
          },
          "desc": {
            "type": "string"
          },
          "chequeNumber": {
            "type": "string"
          },
          "bankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "paymentDate": {
            "type": "string",
            "example": "2017-07-21"
          },
          "requestDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": ""
          },
          "approvalDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": ""
          },
          "invoice": {
            "$ref": "#/components/schemas/BillingInvoice"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "status": {
            "type": "string"
          },
          "paymentOption": {
            "$ref": "#/components/schemas/PaymentOption"
          },
          "isRecepit": {
            "type": "string",
            "description": ""
          },
          "reversalRef": {
            "type": "string",
            "description": ""
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          }
        }
      },
      "ExternalPolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "insurer": {
            "type": "string"
          },
          "policyNo": {
            "type": "string"
          },
          "sumAssured": {
            "type": "number",
            "format": "float"
          },
          "inceptionDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Represents the commencement of policy"
          },
          "term": {
            "type": "integer",
            "format": "int32",
            "description": "Active duration of the policy"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Beneficiary": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for Beneficiary records. It is made up of beneficiary number, country code and source system code."
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "startDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Nomination start date for claim benefit"
          },
          "endDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Nomination end date for claim benefit"
          },
          "relationshipType": {
            "type": "string",
            "description": ""
          },
          "relationshipWith": {
            "type": "string",
            "description": "Relationship of beneficiary with 'LifeAssured', 'PolicyOwner'."
          },
          "percentage": {
            "type": "number",
            "format": "float",
            "description": "Percent of beneift"
          },
          "status": {
            "type": "string",
            "description": "Status of Beneficiary",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "primary": {
            "type": "boolean"
          },
          "attributes": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "QuestionAnswerGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "attributes": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "questionAnswers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionAnswer"
            }
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "extension": {
            "type": "string"
          },
          "compression": {
            "type": "string"
          },
          "encryption": {
            "type": "string"
          },
          "isStatic": {
            "type": "boolean"
          },
          "isPublic": {
            "type": "boolean"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string",
            "format": "base64"
          },
          "parts": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "version": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "subCategory": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "contentLength": {
            "type": "integer",
            "format": "int64"
          },
          "publishedDate": {
            "type": "string",
            "example": "2017-07-21"
          },
          "published": {
            "type": "boolean"
          },
          "overlays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoOverlay"
            }
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        },
        "xml": {
          "name": "Document"
        }
      },
      "AssessmentGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CCA",
              "MENTAL_WELLNESS",
              "MOOD_TRACKER",
              "FEM_HEALTH",
              "UW_STATIC",
              "UW_UME"
            ]
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inProgress": {
            "type": "boolean"
          },
          "recordId": {
            "type": "string"
          },
          "answeredQuestion": {
            "type": "number"
          },
          "fillTimes": {
            "type": "number"
          },
          "lifestyle": {
            "$ref": "#/components/schemas/CustomerLifestyle"
          },
          "latestAssessments": {
            "type": "string",
            "additionalProperties": {
              "type": "string"
            }
          },
          "assessments": {
            "type": "string",
            "additionalProperties": {
              "$ref": "#/components/schemas/Assessment"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            },
            "description": "Assessments within the profile"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "RejectReason": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "Party": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for customer records. It is made up of client number, country code and source system code.",
            "x-dataPolicy": "C1"
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "clientId": {
            "type": "string",
            "description": "A unique no of a customer",
            "x-dataPolicy": "C1"
          },
          "dateOfIncorporation": {
            "type": "string",
            "example": "1970-01-01",
            "description": "",
            "x-dataPolicy": "C1"
          },
          "type": {
            "type": "string",
            "description": "Class of customer Individual or corporate"
          },
          "status": {
            "type": "string",
            "description": "Status of the Customer",
            "enum": [
              "active",
              "inactive",
              "marked_for_deletion",
              "guest"
            ]
          },
          "externalIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Number of the document",
              "x-dataPolicy": "C1"
            },
            "description": "Name of the document",
            "x-dataPolicy": "C1"
          },
          "contactDetails": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Contact"
            },
            "description": "Contact detail belonging to the customer used for policy related communication. Contact detail is an object, it contains mobile, phone, internet etc as key and respective values."
          },
          "addressDetails": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Address"
            },
            "description": "Address belonging to the customer used for policy related communication. Address is an object, identify by address type as key, comprising all relevant attributes of address."
          },
          "preferences": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CustomerPreference"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            }
          },
          "bankAccounts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BankAccount"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            },
            "description": "List of bank a/c belonging to the customer used for policy related payment and receipts. Each bank account is an object, identify by account no as key, comprising all relevant attributes of bank account."
          },
          "relatesTo": {
            "type": "object",
            "description": "",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Party"
              },
              "example": {
                "prop1": {
                  "id": "string"
                },
                "prop2": {
                  "id": "string"
                },
                "prop3": {
                  "id": "string"
                }
              }
            }
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          },
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workflow"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": ""
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": ""
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": ""
          },
          "avatar": {
            "$ref": "#/components/schemas/CustomerAvatar"
          },
          "employments": {
            "type": "string",
            "additionalProperties": {
              "$ref": "#/components/schemas/Employment"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            },
            "description": "List of Employments"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": ""
          }
        },
        "xml": {
          "name": "Party"
        }
      },
      "Source": {
        "type": "object",
        "description": "```DTO```",
        "properties": {
          "channel": {
            "type": "string"
          },
          "medium": {
            "type": "string",
            "enum": [
              "APP",
              "WEBVIEW",
              "SDK",
              "PARTNER_API",
              "RESTRICTED_APP",
              "RESTRICTED_WEBVIEW"
            ]
          }
        }
      },
      "Policy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for policy records. It is made up of policy number, country code and source system code."
          },
          "policyNo": {
            "type": "string",
            "description": "A unique identifier for policy records. ",
            "x-dataPolicy": "C1"
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "List of reference to policy owner customer record."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOption"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "Reference to product options record."
          },
          "totalPremium": {
            "type": "number",
            "format": "currency",
            "description": "This is the amount which is promised to be paid to Insurer by insured againt the contract for insured Life coverage"
          },
          "outstandingPremium": {
            "type": "number",
            "description": "This is the total amount outstanding for lapsed policy"
          },
          "term": {
            "type": "integer",
            "format": "int32",
            "description": "Active duration of the policy"
          },
          "sumAssured": {
            "type": "number",
            "format": "currency",
            "description": "Amount which will be given to Beneficiay in case of event"
          },
          "paymentOption": {
            "$ref": "#/components/schemas/PaymentOption"
          },
          "contractDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": ""
          },
          "inceptionDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Represents the commencement of policy.",
            "x-dataPolicy": "C1"
          },
          "firstIssueDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Policy issues for the first time"
          },
          "endDate": {
            "type": "string",
            "example": "2017-07-21"
          },
          "receivedDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": ""
          },
          "deliveryDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": ""
          },
          "cancelDate": {
            "type": "string",
            "example": "2017-07-21"
          },
          "cancelReason": {
            "type": "string"
          },
          "epolicyOption": {
            "type": "string",
            "description": "Customer's preference to receive e-policy certificate instead of a printed document."
          },
          "status": {
            "type": "string",
            "description": "Status of the Policy."
          },
          "sourceOfBusiness": {
            "type": "string",
            "description": "Channel which helps company selling its products"
          },
          "premiumStatus": {
            "type": "string",
            "description": "Premium status of the Policy"
          },
          "branch": {
            "type": "string",
            "description": "policy branch location"
          },
          "isPremiumHoliday": {
            "type": "string",
            "description": "Premium Free duration"
          },
          "billingDetail": {
            "$ref": "#/components/schemas/BillingDetail"
          },
          "proposal": {
            "$ref": "#/components/schemas/Proposal"
          },
          "lifeAssured": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "DEPRECATED - Use lifeAssured in the productComponentOption",
            "deprecated": true
          },
          "beneficiaries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Beneficiary"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "List of reference to beneficiary customer record."
          },
          "witnesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "List of reference to witness customer record."
          },
          "nominees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Nominee"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "List of reference to nominee customer record."
          },
          "guardians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "List of reference to guardian / trustee customer record."
          },
          "payers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "List of reference to payers customer record."
          },
          "owners": {
            "$ref": "#/components/schemas/Customer"
          },
          "servingAgents": {
            "$ref": "#/components/schemas/ServingAgents"
          },
          "policyLoan": {
            "$ref": "#/components/schemas/Loan"
          },
          "appointee": {
            "$ref": "#/components/schemas/Customer"
          },
          "assignee": {
            "$ref": "#/components/schemas/Customer"
          },
          "trustee": {
            "$ref": "#/components/schemas/Customer"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": ""
          },
          "priorPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalPolicy"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "questionAnswerGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionAnswerGroup"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "followUp": {
            "type": "object",
            "description": "Reference to follow up record."
          },
          "actionPlans": {
            "type": "object",
            "description": "Reference to ActionPlans"
          },
          "relation": {
            "type": "object",
            "description": "Relation belonging to the policy used for maintaining customer relationship. Relation option is an object, identify by policy number as key, comprising all relevant attributes of relation."
          },
          "nextPremiumDue": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z",
            "description": "Due date on which Premium to be paid"
          },
          "nextBillingDue": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z",
            "description": "Billing information generated for the premium"
          },
          "tpa": {
            "$ref": "#/components/schemas/TPA"
          },
          "customerRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerRole"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "Array of id references to CustomerRole"
          },
          "parentPolicy": {
            "type": "string",
            "description": "Policy Number of the parent for the group policy"
          },
          "scope": {
            "type": "string",
            "enum": [
              "Organization",
              "Family",
              "Individual",
              "group"
            ]
          },
          "dispatchMethod": {
            "type": "string",
            "enum": [
              "physicalPolicy",
              "ePolicy"
            ]
          },
          "dispatchDestination": {
            "$ref": "#/components/schemas/Address"
          },
          "dispatchAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "bankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "contactDetails": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Contact"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            }
          },
          "sourceChannel": {
            "$ref": "#/components/schemas/Source"
          },
          "termsConditions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TermsCondition"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            }
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "TermsCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "org": {
            "type": "string"
          },
          "privacy": {
            "type": "string",
            "enum": [
              "accept",
              "reject"
            ]
          },
          "privacyVersion": {
            "type": "string"
          },
          "consent": {
            "type": "string",
            "enum": [
              "ACCEPT",
              "REJECT",
              "WEDONTKNOW"
            ]
          },
          "consentDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "validUpto": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          }
        }
      },
      "CustomerRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of a Customer Role record, a combonation of policy number, customer number and role short code [OW, LF, JL, PY, AS, TR]"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer",
            "description": "Id reference to Customer"
          },
          "role": {
            "type": "string",
            "description": "Role name"
          }
        }
      },
      "Address": {
        "type": "object",
        "description": "```DTO```",
        "properties": {
          "type": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "line1": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "line2": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "line3": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "line4": {
            "type": "string",
            "description": ""
          },
          "line5": {
            "type": "string",
            "description": ""
          },
          "city": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "state": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "district": {
            "type": "string",
            "description": ""
          },
          "subDistrict": {
            "type": "string",
            "description": ""
          },
          "zipcode": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "country": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "countryCode": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "landmark": {
            "type": "string",
            "description": ""
          },
          "latitude": {
            "type": "number",
            "description": ""
          },
          "longitude": {
            "type": "number",
            "description": ""
          }
        },
        "xml": {
          "name": "Address"
        }
      },
      "Referral": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "example": "1970-01-01"
          }
        }
      },
      "Claim": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for claim records. It is made up of policy number, life no, coverage no, rider no, country code and source system code."
          },
          "applicationNo": {
            "type": "string",
            "description": ""
          },
          "claimNo": {
            "type": "string",
            "description": "Claim sequence number"
          },
          "lifeAssured": {
            "$ref": "#/components/schemas/Customer"
          },
          "coverage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductOption"
              },
              {
                "$ref": "#/components/schemas/ProductComponentOption"
              }
            ],
            "description": "DEPRECATED - Product Option / Product Component Option reference",
            "deprecated": true
          },
          "riders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductComponentOption"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "otherPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalPolicy"
            },
            "description": "Other external policies related to this claim",
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "admission": {
            "$ref": "#/components/schemas/Admission"
          },
          "tpa": {
            "$ref": "#/components/schemas/TPA"
          },
          "bankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "typeCode": {
            "type": "string",
            "description": "Type of claim which is reported",
            "x-dataPolicy": "C4"
          },
          "claimType": {
            "type": "string",
            "description": "This is type of event, for which claim is made. Eg. Hospitalization.",
            "x-dataPolicy": "C4"
          },
          "eventDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z",
            "description": "Date on which event has happened",
            "x-dataPolicy": "C4"
          },
          "amountClaimed": {
            "type": "number",
            "format": "currency",
            "description": "Amount which is being claimed",
            "x-dataPolicy": "C4"
          },
          "amountPaid": {
            "type": "number",
            "format": "currency",
            "description": "Actual Amount approved and paid",
            "x-dataPolicy": "C4"
          },
          "adjustmentAmount": {
            "type": "number",
            "format": "currency",
            "description": "Amount adjusted over or under sum assured value. It van hold positive and negative signed values."
          },
          "adjustmentReason": {
            "type": "string",
            "description": ""
          },
          "isLumpsum": {
            "type": "string",
            "description": ""
          },
          "causeOfDeath": {
            "type": "string",
            "description": "In case of death claim, the reason for death is captured.",
            "x-dataPolicy": "C4"
          },
          "causeOfInjury": {
            "type": "string",
            "description": "In case of TPD claim, the reason for injury is captured."
          },
          "desc": {
            "type": "string",
            "description": "Description of Claim",
            "x-dataPolicy": "C4"
          },
          "currency": {
            "type": "string",
            "description": "Claim Amount Unit"
          },
          "hospital": {
            "$ref": "#/components/schemas/Hospital"
          },
          "doctor": {
            "$ref": "#/components/schemas/Doctor"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": ""
          },
          "status": {
            "type": "string",
            "description": "Status of the claim",
            "x-dataPolicy": "C4"
          },
          "disputed": {
            "type": "boolean",
            "description": "",
            "x-dataPolicy": "C4"
          },
          "disputeReason": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C4"
          },
          "declineCode": {
            "type": "string",
            "description": "Source code for decline of claim"
          },
          "declineReason": {
            "type": "string",
            "description": "Description of decline reason",
            "x-dataPolicy": "C4"
          },
          "disability": {
            "type": "string",
            "enum": [
              "none",
              "partial",
              "full"
            ],
            "description": "Is person disabled"
          },
          "disabilityDetails": {
            "type": "string",
            "description": "Detail on disability"
          },
          "hospitalizationReason": {
            "type": "string",
            "description": "Detail on hospitalization reason"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "client": {
            "$ref": "#/components/schemas/Customer"
          },
          "submittedBy": {
            "$ref": "#/components/schemas/Customer"
          },
          "policy": {
            "$ref": "#/components/schemas/Policy",
            "deprecated": true,
            "description": "Use policy object from riders attribute"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "paymentOption": {
            "$ref": "#/components/schemas/PaymentOption"
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "firstPaymentDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Date on which first payment was given to the claim",
            "x-dataPolicy": "C4"
          },
          "nextPaymentDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Next due date on which payment to be made",
            "x-dataPolicy": "C4"
          },
          "approvalDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Date on which approval was given to the claim",
            "x-dataPolicy": "C4"
          },
          "settlementDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Date on which claim has been settled",
            "x-dataPolicy": "C4"
          },
          "cancellationDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Date on which payment was cancelled",
            "x-dataPolicy": "C4"
          },
          "lastPayDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "In case of regular claim payment, the date on which payment was made last.",
            "x-dataPolicy": "C4"
          },
          "finalPayDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "In case of regular claim payment, the final payment date.",
            "x-dataPolicy": "C4"
          },
          "submissionDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Date of submission is required to track the claim completely."
          },
          "treatmentType": {
            "type": "string",
            "description": "To capture whether INPATIENT or OUTPATIENT"
          },
          "customerConsent": {
            "$ref": "#/components/schemas/TermsCondition"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "vouchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Voucher"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "loyaltyPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoyaltyPoint"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "experiences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Experience"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "cards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Card"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "cryptokeys": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "balance": {
            "type": "number"
          },
          "payload": {
            "type": "object"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "Occupation": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "x-dataPolicy": "C1"
          },
          "group": {
            "type": "string",
            "x-dataPolicy": "C1"
          },
          "desc": {
            "type": "string",
            "x-dataPolicy": "C1"
          }
        }
      },
      "BillingDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "policyPayer": {
            "$ref": "#/components/schemas/Customer"
          },
          "policyOwner": {
            "$ref": "#/components/schemas/Customer"
          },
          "startDate": {
            "type": "string",
            "example": "2017-07-21"
          },
          "paymentOption": {
            "$ref": "#/components/schemas/PaymentOption"
          },
          "accountNo": {
            "type": "string"
          },
          "paymentMode": {
            "type": "string"
          },
          "billCycle": {
            "type": "string"
          },
          "paymentFreq": {
            "type": "string"
          },
          "autoDebit": {
            "type": "boolean"
          },
          "bankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        },
        "xml": {
          "name": "BillingDetail"
        }
      },
      "CustomerLifestyle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ageNextBday": {
            "type": "integer",
            "format": "int32",
            "description": ""
          },
          "ageRange": {
            "type": "string",
            "description": ""
          },
          "isSmoker": {
            "type": "boolean",
            "description": "Smoking status",
            "x-dataPolicy": "C4"
          },
          "smokingHabit": {
            "type": "string"
          },
          "drinkingHabit": {
            "type": "string"
          },
          "athleticsHabit": {
            "type": "string"
          },
          "religion": {
            "type": "string",
            "description": ""
          },
          "education": {
            "type": "string",
            "description": ""
          },
          "language": {
            "type": "string",
            "description": "Customer language in which he/she is comfortable",
            "x-dataPolicy": "C1"
          },
          "height": {
            "type": "number",
            "format": "float",
            "description": "The measurement of customer from head to foot",
            "x-dataPolicy": "C1"
          },
          "heightUnit": {
            "type": "string",
            "description": "Measured in units Eg. Feet, CM etc."
          },
          "weight": {
            "type": "number",
            "format": "float",
            "description": "The measurement of customer heaviness",
            "x-dataPolicy": "C1"
          },
          "weightUnit": {
            "type": "string",
            "description": "Measured in units Eg.  kilograms, pounds, or tons etc."
          },
          "bmi": {
            "type": "number",
            "format": "float",
            "description": "A measure of body fat that is the ratio of the weight",
            "x-dataPolicy": "C4"
          },
          "bmiDesc": {
            "type": "string",
            "description": "BMI description of a customer"
          },
          "allergies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "deprecated": true,
            "x-dataPolicy": "C4"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": ""
          },
          "familyHistory": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            },
            "description": ""
          },
          "medicalProfile": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "kycDetails": {
            "$ref": "#/components/schemas/KYC"
          },
          "financialStatus": {
            "$ref": "#/components/schemas/Financials"
          },
          "otherActivities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of other activity like rash driving, paragliding etc belonging to the customer used for policy underwriting. Each activity is an object, identify by Name as key, comprising all relevant attributes of activities.",
            "x-dataPolicy": "C1"
          },
          "medicalHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MedicalIllness"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "List of medical history belonging to the customer used for policy underwriting. Each medical history is an object, identify by Name as key, comprising all relevant attributes of medical history."
          },
          "occupation": {
            "$ref": "#/components/schemas/Occupation"
          },
          "incomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Income"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "List of income belonging to the customer used for policy underwriting. Each income is an object, identify by source as key, comprising all relevant attributes of income."
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        },
        "xml": {
          "name": "CustomerLifestyle"
        }
      },
      "CustomerComplaint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "issueCode": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "careLevel": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          },
          "resolutionCode": {
            "type": "string"
          },
          "resolutionDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "notes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "linkedComplaints": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CustomerComplaint"
            }
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "toAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customerIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageChannel"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "cc": {
            "type": "string"
          },
          "bcc": {
            "type": "string"
          },
          "channel": {
            "$ref": "#/components/schemas/MessageChannel"
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "normal",
              "high"
            ]
          },
          "pushType": {
            "type": "string",
            "enum": [
              "ALERT",
              "VOIP",
              "SILENT"
            ]
          },
          "customChannel": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "schedule": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": "2021-01-21T17:32:28Z",
            "description": "Date & time on which message to be sent"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          }
        }
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "referralCode": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/Customer"
          },
          "parent": {
            "$ref": "#/components/schemas/Group"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "upcoming",
              "ongoing",
              "complete"
            ]
          },
          "privacy": {
            "type": "string",
            "enum": [
              "PRIVATE",
              "PUBLIC",
              "RESTRICTED",
              "SUBSCRIPTION"
            ]
          },
          "classification": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "icon": {
            "$ref": "#/components/schemas/Document"
          },
          "groupActivity": {
            "$ref": "#/components/schemas/GroupActivity"
          },
          "order": {
            "type": "number"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "pinnedPosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupPost"
            }
          },
          "metaData": {
            "$ref": "#/components/schemas/GroupDefinition"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "Relation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "type": {
            "type": "string",
            "example": "Emergency Contact"
          },
          "relationshipType": {
            "type": "string"
          },
          "preference": {
            "type": "string",
            "enum": [
              "primary",
              "secondary",
              "other"
            ]
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "Vaccinations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "2020-07-21"
          },
          "appliedTo": {
            "$ref": "#/components/schemas/Customer"
          },
          "vaccinationSchedule": {
            "$ref": "#/components/schemas/VaccinationSchedule"
          },
          "administeredVaccinations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vaccination"
            }
          }
        }
      },
      "FATCADetail": {
        "type": "object",
        "properties": {
          "USTaxInd": {
            "type": "string",
            "description": "US tax status of customer",
            "x-dataPolicy": "C4"
          },
          "USDeclarationFormType": {
            "type": "string",
            "description": "US Tax form type submitted by Customer",
            "x-dataPolicy": "C4"
          },
          "exceptionType": {
            "type": "string",
            "description": "FATCA indicia was triggered because phone, address, birth, Nationality and Tax indicator"
          },
          "USIndic": {
            "type": "string",
            "description": "country code"
          },
          "exceptionCode": {
            "type": "string",
            "description": "To US or NON US"
          },
          "TIN": {
            "type": "string",
            "description": "US Tax number of customer",
            "x-dataPolicy": "C1"
          },
          "formEffectDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "US Tax form effective date",
            "x-dataPolicy": "C4"
          },
          "formExpiryDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "US Tax form expiry date",
            "x-dataPolicy": "C4"
          },
          "recordedDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Date on which added in exception"
          },
          "clearedDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Date on which cleared from exception"
          }
        }
      },
      "LifeAssured": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "relationship": {
            "type": "string",
            "enum": [
              "SELF",
              "SPOUSE",
              "CHILD",
              "POLICY_HOLDER",
              "OTHER"
            ]
          },
          "customerLifestyle": {
            "$ref": "#/components/schemas/CustomerLifestyle"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "ProductComponentOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for Main coverage records. It is made up of policy number, life no, coverage no, rider no , country code and source system code."
          },
          "component": {
            "$ref": "#/components/schemas/ProductComponent"
          },
          "term": {
            "type": "integer",
            "description": ""
          },
          "benefitTerm": {
            "type": "integer",
            "description": ""
          },
          "premiumTerm": {
            "type": "integer",
            "description": ""
          },
          "sumAssured": {
            "type": "number",
            "description": "This is the Amount, which will be paid in case any unfortunate event happens"
          },
          "outstandingSumAssured": {
            "type": "number",
            "description": "This is the outstanding Amount available"
          },
          "premium": {
            "type": "number",
            "description": "This is the total amount which is being against the contract made between insurer and insured"
          },
          "premiumCessTerm": {
            "type": "number",
            "description": "Number of Years for which Premium needs to be Paid."
          },
          "premiumCessDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "After this date, Customer doesnt have to pay any Premium, but still Coverage will be Active"
          },
          "riskCessDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "This is the date, on which Coverage will get expired, after which there is no legal contract remains active."
          },
          "commencementDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Date on which Coverage becomes active for the first time",
            "x-dataPolicy": "C1"
          },
          "riskCessTerm": {
            "type": "number",
            "description": "Number of Years for which Customer is covered."
          },
          "installmentPremium": {
            "type": "number",
            "description": "This is installment amount, which is exclusive of Loading premium if any."
          },
          "mortalityClass": {
            "type": "string",
            "description": "This is the Rating Class assigned by Insurer, which decides the Risk on insured Life."
          },
          "loadingPremium": {
            "type": "number",
            "description": "This is Loading premium, which needs to be paid, if Insured comes under high risk category."
          },
          "options": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": ""
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "lifeAssured": {
            "$ref": "#/components/schemas/LifeAssured"
          },
          "status": {
            "type": "string",
            "description": "Status of the Coverage. Eg. Inforce, Lapsed, etc"
          },
          "startDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z",
            "description": ""
          },
          "endDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z",
            "description": ""
          },
          "extraLoadingDetail": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PremiumLoading"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            },
            "description": "Extra loading of premium is captured"
          },
          "premiumStatus": {
            "type": "string",
            "description": ""
          },
          "productOption": {
            "$ref": "#/components/schemas/ProductOption"
          },
          "surrenderValue": {
            "type": "number",
            "format": "currency",
            "description": "Actual amount paid out to customer upon surrender of a policy broken down for base plan and top-ups."
          },
          "surrenderAdjustment": {
            "type": "number",
            "format": "currency",
            "description": "Any adjustment made over or below the calculated surrender value."
          },
          "cashOut": {
            "$ref": "#/components/schemas/CashOut"
          },
          "riderFlag": {
            "type": "string",
            "enum": [
              "BASEPLAN",
              "RIDER",
              "TOPUP",
              "CASHOUT"
            ]
          },
          "auditDetails": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "PremiumLoading": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of premium loading, represents reason for extra loading of premium on a product option or product component option."
          },
          "adjustmentPercent": {
            "type": "number",
            "description": "Adjustment over and above loading"
          },
          "ageRate": {
            "type": "number",
            "description": "Loading ends at this age"
          },
          "flatMortalityPercentage": {
            "type": "number",
            "description": "Increase or decrease mortality percentage"
          },
          "loadPercentage": {
            "type": "number",
            "description": "Percentage of loading premium"
          },
          "loadingPremium": {
            "type": "number",
            "description": "Loading premium amount"
          },
          "subStandardLife": {
            "type": "string"
          },
          "rateAdjust": {
            "type": "number",
            "description": "Adjustment to premium rate"
          },
          "fromDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Extra loading of premium effective date"
          },
          "toDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Extra loading of premium end date"
          }
        }
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "bankName": {
            "type": "string",
            "x-dataPolicy": "C3"
          },
          "bankCode": {
            "type": "string",
            "x-dataPolicy": "C3"
          },
          "branchCode": {
            "type": "string",
            "x-dataPolicy": "C3"
          },
          "accountNo": {
            "type": "string",
            "x-dataPolicy": "C3"
          },
          "accountName": {
            "type": "string",
            "x-dataPolicy": "C3"
          },
          "accountType": {
            "type": "string"
          },
          "jointAccName": {
            "type": "string",
            "x-dataPolicy": "C3"
          },
          "currencyCode": {
            "type": "string"
          },
          "effectiveFrom": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "branchAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "BillingInvoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "invoiceType": {
            "type": "string",
            "enum": [
              "BILLING",
              "COLLECTIONINVOICE"
            ]
          },
          "billingNo": {
            "type": "string"
          },
          "partnerInvoiceNo": {
            "type": "string"
          },
          "billingDetail": {
            "$ref": "#/components/schemas/BillingDetail"
          },
          "billAmount": {
            "type": "number",
            "format": "float"
          },
          "currency": {
            "type": "string"
          },
          "accountNo": {
            "type": "string"
          },
          "invoiceDate": {
            "type": "string",
            "example": "2017-07-21"
          },
          "dueDate": {
            "type": "string",
            "example": "2017-07-21"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "closed",
              "cancelled",
              "due"
            ]
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "basePremium": {
            "type": "number",
            "format": "float",
            "description": "This is the total premium amount due minus taxes."
          },
          "paymentOption": {
            "$ref": "#/components/schemas/PaymentOption"
          },
          "taxComponents": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "attributes": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        },
        "xml": {
          "name": "BillingInvoice"
        }
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "PayMethodCode": {
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string"
              },
              "pgCode": {
                "type": "string"
              }
            }
          }
        }
      },
      "VideoOverlay": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "video": {
            "$ref": "#/components/schemas/Document"
          },
          "openDetails": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "enum": [
                  "START",
                  "END"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "ABSOLUTE",
                  "PERCENTAGE"
                ]
              },
              "value": {
                "type": "number",
                "format": "double",
                "description": "(Seconds if absolute). At what progress point of video, display overlay"
              },
              "bufferType": {
                "type": "string",
                "enum": [
                  "ABSOLUTE",
                  "PERCENTAGE"
                ]
              },
              "bufferValue": {
                "type": "number",
                "format": "double",
                "description": "(Seconds if absolute). If seeked past value without displaying, can we show the overlay?"
              }
            }
          },
          "closeDetails": {
            "type": "object",
            "properties": {
              "onContentEnd": {
                "type": "boolean",
                "description": "Once video ends and overlay present, dismis it?"
              },
              "byUserAction": {
                "type": "boolean",
                "description": "Once user acts upon overlay, dismis it?"
              },
              "onClose": {
                "type": "boolean",
                "description": "Option to close overlay"
              },
              "onOtherOverlayStart": {
                "type": "boolean",
                "description": "In case of multiple sequential overlays, if overlay present and other overlay needs to be displayed, dismis it?"
              },
              "afterPeriod": {
                "type": "number",
                "format": "double",
                "description": "After X seconds of video playing, dismis it."
              }
            }
          },
          "actionable": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Displayable name for action"
              },
              "action": {
                "type": "string",
                "enum": [
                  "NAVIGATE"
                ]
              },
              "type": {
                "type": "string"
              },
              "navigateTo": {
                "type": "string"
              },
              "params": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Assessment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ASSIGNED",
              "COMPLETED",
              "INPROGRESS",
              "CANCELLED",
              "CLOSED"
            ]
          },
          "type": {
            "type": "string"
          },
          "recordId": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "genderText": {
            "type": "string"
          },
          "age": {
            "type": "number"
          },
          "version": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "result": {
            "$ref": "#/components/schemas/AssessmentResult"
          },
          "lifestyle": {
            "$ref": "#/components/schemas/CustomerLifestyle"
          },
          "questionAnswers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionAnswerGroup"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "Contact": {
        "type": "object",
        "x-dataPolicy": "C2",
        "description": "```DTO```",
        "properties": {
          "channel": {
            "type": "string",
            "enum": [
              "EMAIL",
              "MOBILE",
              "PHONE",
              "TWITTER",
              "FACEBOOK",
              "WEBSITE",
              "DEVICE",
              "VOIP",
              "HOTLINE",
              "VIBER",
              "WECHAT",
              "WHATSAPP",
              "SKYPE",
              "TELEGRAM",
              "CUSTOM"
            ]
          },
          "customChannel": {
            "type": "string",
            "description": ""
          },
          "value": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "countryCode": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "areaCode": {
            "type": "string",
            "description": "",
            "x-dataPolicy": "C2"
          },
          "isVerified": {
            "type": "boolean",
            "description": ""
          }
        },
        "xml": {
          "name": "Contact"
        }
      },
      "CustomerPreference": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "billingAddress",
              "preferredLanguage",
              "height",
              "weight",
              "distance",
              "preferredCommChn",
              "custom"
            ]
          },
          "customType": {
            "type": "string",
            "description": ""
          },
          "value": {
            "type": "object",
            "description": ""
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        },
        "xml": {
          "name": "CustomerPreference"
        }
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "falloutCode": {
            "type": "string"
          },
          "falloutDesc": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "completionDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          }
        },
        "xml": {
          "name": "Wokflow"
        }
      },
      "CustomerAvatar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "FACEDP",
              "MAKEBABY"
            ]
          },
          "mandatoryAttributes": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "optionalAttributes": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "dpImage": {
            "type": "string"
          }
        }
      },
      "Employment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "natureOfBusiness": {
            "type": "string"
          },
          "organizationType": {
            "type": "string"
          },
          "dateOfJoining": {
            "type": "string",
            "example": "2020-05-13"
          },
          "dateOfTermination": {
            "type": "string",
            "example": "2020-08-19"
          },
          "employer": {
            "$ref": "#/components/schemas/Party"
          }
        },
        "xml": {
          "name": "Employment"
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "source": {
            "type": "string"
          },
          "owner": {
            "type": "string"
          },
          "userAgent": {
            "$ref": "#/components/schemas/UserAgent"
          },
          "startDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "completionDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        },
        "xml": {
          "name": "Event"
        }
      },
      "Nominee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "startDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Nomination start date"
          },
          "endDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Nomination end date"
          },
          "relationshipType": {
            "type": "string"
          },
          "relationshipWith": {
            "type": "string"
          },
          "percentage": {
            "type": "number",
            "format": "float",
            "description": "Percent of beneift"
          },
          "status": {
            "type": "string",
            "description": "Status of Nominee",
            "enum": [
              "active",
              "inactive",
              "rejected",
              "pending",
              "accepted"
            ]
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "primary": {
            "type": "boolean"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "TPA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Party"
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "TPA code"
              },
              "servedProduct": {
                "type": "string",
                "description": ""
              },
              "sowAgreementNumber": {
                "type": "string",
                "description": ""
              },
              "startDate": {
                "type": "string",
                "example": "1970-01-01",
                "description": "Start date"
              },
              "endDate": {
                "type": "string",
                "example": "1970-01-01",
                "description": "End date"
              },
              "tpaPointOcf": {
                "type": "string",
                "description": ""
              },
              "priority": {
                "type": "string",
                "description": ""
              }
            }
          }
        ]
      },
      "ServingAgents": {
        "type": "object",
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/Agent"
          },
          "percent": {
            "type": "number",
            "format": "float"
          },
          "secondaryAgent": {
            "$ref": "#/components/schemas/Agent"
          },
          "secondaryPercent": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "Loan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "loanNumber": {
            "type": "string",
            "description": "Loan reference number from source system."
          },
          "loanType": {
            "type": "string",
            "enum": [
              "automaticPremiumLoan",
              "surgicalandNursing",
              "SurvivalBenefit",
              "policyLoan"
            ]
          },
          "loanStartDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "principalAmt": {
            "type": "number",
            "format": "float",
            "x-dataPolicy": "C1"
          },
          "outstandingAmount": {
            "type": "number",
            "format": "float",
            "description": "Outstanding amount on a loan account.",
            "x-dataPolicy": "C1"
          },
          "interestRate": {
            "type": "number",
            "format": "float",
            "x-dataPolicy": "C1"
          },
          "currentCapitalDue": {
            "type": "number",
            "format": "float",
            "x-dataPolicy": "C1"
          },
          "lastCapitalizationDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "arrearInterestDue": {
            "type": "number",
            "format": "float",
            "x-dataPolicy": "C1"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "PENDING",
              "REJECTED",
              "CLOSED"
            ]
          },
          "interestType": {
            "type": "string",
            "enum": [
              "SIMPLE",
              "COMPOUND"
            ]
          },
          "compoundPeriod": {
            "type": "string",
            "enum": [
              "DAILY",
              "MONTHLY",
              "YEARLY"
            ]
          },
          "currentInterestDue": {
            "type": "number",
            "format": "float",
            "x-dataPolicy": "C1"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "Admission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Record identifier"
          },
          "admissionId": {
            "type": "string",
            "description": "Admission Id"
          },
          "tpaProviderCode": {
            "type": "string",
            "description": ""
          },
          "lifeAssured": {
            "$ref": "#/components/schemas/Customer"
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "productComponentOption": {
            "$ref": "#/components/schemas/ProductComponentOption",
            "description": "Reference to Rider"
          },
          "hospital": {
            "type": "string",
            "$ref": "#/components/schemas/Hospital",
            "description": "Hospital Reference"
          },
          "tpa": {
            "$ref": "#/components/schemas/TPA",
            "description": "TPA Reference"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          },
          "admissionDate": {
            "type": "string",
            "example": "1970-01-01",
            "description": "Date of admission"
          },
          "outpatientDate": {
            "type": "array",
            "description": "Date of outpatient treatment. Applicable to outpatient claims only. A single outpatient claim can have more than one outpatient date.",
            "items": {
              "type": "string",
              "example": "1970-01-01"
            }
          },
          "status": {
            "type": "string",
            "description": "Status of admission"
          },
          "dailyLimit": {
            "type": "number"
          },
          "availableStatus": {
            "type": "string",
            "description": "Status of availability"
          },
          "planCode": {
            "type": "string",
            "description": "Plan code to be sent to TPA to map to specific benefits"
          },
          "preAdmissionId": {
            "type": "string"
          },
          "accidentDate": {
            "type": "string",
            "example": "1970-01-01"
          },
          "disablementDate": {
            "type": "string",
            "example": "1970-01-01"
          },
          "dischargeDate": {
            "type": "string",
            "example": "1970-01-01",
            "description": "Date of discharge"
          }
        }
      },
      "Hospital": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "hospital",
              "clinic"
            ]
          },
          "timing": {
            "type": "string"
          },
          "capabilities": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "clinic",
                "hospital"
              ]
            }
          },
          "specialities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "associatedTPA": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TPA"
            }
          },
          "contactDetails": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "doctors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Doctor"
            }
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "rooms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Room"
            }
          }
        }
      },
      "Doctor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Party"
          },
          {
            "type": "object",
            "properties": {
              "specialities": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "virtual": {
                "type": "boolean"
              },
              "rating": {
                "type": "number"
              },
              "hospitals": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Hospital"
                }
              },
              "consultModes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "clinic",
                    "hospital",
                    "video",
                    "home"
                  ]
                }
              },
              "practitionerRole": {
                "type": "object",
                "description": "FHIR wrapper for PractitionerRole"
              },
              "availabilities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DoctorAvailability"
                }
              },
              "availabilityStatus": {
                "type": "string",
                "enum": [
                  "AVAILABLE",
                  "BOOKED"
                ]
              },
              "bookedStatus": {
                "type": "string",
                "enum": [
                  "BUSY",
                  "FREE"
                ]
              }
            }
          }
        ]
      },
      "Card": {
        "type": "object",
        "properties": {
          "cardNo": {
            "type": "string"
          },
          "expiry": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cvv": {
            "type": "string"
          },
          "acctNo": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "acctType": {
            "type": "string",
            "enum": [
              "credit",
              "debit"
            ]
          },
          "token": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "MasterCard",
              "Visa",
              "Amex",
              "Other"
            ]
          },
          "otherType": {
            "type": "string"
          }
        }
      },
      "LoyaltyPoint": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reward"
          },
          {
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "point",
                  "badge",
                  "trophy"
                ]
              }
            }
          }
        ]
      },
      "Experience": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reward"
          },
          {
            "properties": {
              "transactions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "EXPERIENCE"
                ]
              }
            }
          }
        ]
      },
      "Voucher": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Reward"
          },
          {
            "properties": {
              "batchKey": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "qrCodeUrl": {
                "type": "string"
              },
              "redemptionUrl": {
                "type": "string"
              },
              "userCode": {
                "type": "string"
              },
              "balance": {
                "type": "number",
                "format": "currency"
              },
              "onetime": {
                "type": "boolean"
              },
              "transferable": {
                "type": "boolean"
              },
              "timesRedeemed": {
                "type": "number"
              },
              "maxRedeem": {
                "type": "number"
              },
              "type": {
                "type": "string",
                "enum": [
                  "voucher",
                  "coupon",
                  "giftcard"
                ]
              },
              "image": {
                "$ref": "#/components/schemas/Document"
              },
              "discountType": {
                "type": "string"
              },
              "discountPerc": {
                "type": "string"
              },
              "discountAmt": {
                "type": "number",
                "format": "currency"
              },
              "recipient": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        ]
      },
      "Currency": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "float"
          },
          "unit": {
            "type": "string"
          }
        }
      },
      "MedicalIllness": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of disease",
            "x-dataPolicy": "C4"
          },
          "critical": {
            "type": "boolean",
            "description": "Criticalness of disease",
            "x-dataPolicy": "C4"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Hobbies and activity in which customer associate",
            "x-dataPolicy": "C4"
          },
          "diagnosedDate": {
            "type": "string",
            "example": "2017-07-21",
            "description": "Detected Date of disease",
            "x-dataPolicy": "C4"
          }
        },
        "xml": {
          "name": "MedicalIllness"
        }
      },
      "KYC": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "cardImage": {
            "$ref": "#/components/schemas/Document"
          },
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "selfieImages": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "faceMatchScore": {
            "type": "number",
            "format": "float"
          },
          "kycScore": {
            "type": "number",
            "format": "float"
          },
          "amlScore": {
            "type": "number",
            "format": "float"
          },
          "amlRequired": {
            "type": "boolean"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "Financials": {
        "type": "object",
        "properties": {
          "income": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Income"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "Customer financial assets details"
          },
          "liabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Liability"
            },
            "example": [
              {
                "id": "string"
              }
            ],
            "description": "Customer financial liabilitie details"
          }
        }
      },
      "Income": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "x-dataPolicy": "C3"
          },
          "sourceType": {
            "type": "string",
            "enum": [
              "ROUTINE",
              "NON_ROUTINE"
            ]
          },
          "frequency": {
            "type": "string",
            "x-dataPolicy": "C3"
          },
          "amount": {
            "type": "string",
            "format": "currency",
            "x-dataPolicy": "C3"
          },
          "currency": {
            "type": "string",
            "x-dataPolicy": "C3"
          }
        }
      },
      "MessageChannel": {
        "type": "string",
        "enum": [
          "email",
          "sms",
          "push",
          "whatsapp",
          "viber",
          "slack",
          "wechat",
          "telegram",
          "line",
          "custom"
        ]
      },
      "GroupActivity": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "endTime": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "slot": {
            "type": "number",
            "description": "Sequence of this activity"
          },
          "content": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "activityCriteria": {
            "type": "string",
            "additionalProperties": {
              "type": "string"
            }
          },
          "criteria": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "GroupDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "slot": {
            "type": "number",
            "description": "Sequence of this activity"
          },
          "goal": {
            "type": "string"
          },
          "icons": {
            "type": "string",
            "additionalProperties": {
              "$ref": "#/components/schemas/Document"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "COMMUNITY",
              "DIY",
              "GROUP"
            ]
          },
          "privacy": {
            "type": "string",
            "enum": [
              "PRIVATE",
              "PUBLIC",
              "RESTRICTED",
              "SUBSCRIPTION"
            ]
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "CUSTOM"
            ]
          },
          "countryCode": {
            "type": "string"
          },
          "classification": {
            "type": "string"
          },
          "subClassification": {
            "type": "string"
          },
          "measurement": {
            "type": "string",
            "enum": [
              "AUTO",
              "MANUAL"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "UPCOMING",
              "ONGOING",
              "COMPLETE",
              "INACTIVE"
            ]
          },
          "startTime": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "endTime": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "flags": {
            "type": "string",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "availableActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Activity"
            }
          },
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupPost"
            }
          },
          "rewards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reward"
            }
          },
          "content": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "criteria": {
            "type": "string",
            "additionalProperties": {
              "type": "string"
            }
          },
          "screenRedirection": {
            "type": "string",
            "additionalProperties": {
              "type": "string"
            }
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "GroupPost": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "type": {
            "type": "string",
            "enum": [
              "comment",
              "like",
              "dislike",
              "share",
              "post",
              "favourite",
              "unfavourite",
              "product"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "MARKED_AS_ABUSIVE",
              "APPROVED",
              "ABUSIVE_DELETED"
            ]
          },
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/GroupPost"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "order": {
            "type": "number"
          },
          "recommendations": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GroupPost"
              }
            }
          },
          "attributes": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LangTranslation"
            },
            "description": "Language transalation for non static fields. Key is the langauge code, value is map of field & their language tranlation"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "VaccinationSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "vaccinations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "disease": {
                  "type": "string"
                },
                "dosagePrescribed": {
                  "type": "string"
                },
                "reminder": {
                  "type": "boolean"
                },
                "plannedSchedule": {
                  "type": "string"
                },
                "plannedDate": {
                  "type": "string",
                  "example": "2020-07-21"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "MANDATORY",
                    "OPTIONAL",
                    "OTHER"
                  ]
                },
                "administered": {
                  "$ref": "#/components/schemas/Vaccination"
                }
              }
            }
          }
        }
      },
      "Vaccination": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "disease": {
            "type": "string"
          },
          "dosage": {
            "type": "string"
          },
          "certificate": {
            "$ref": "#/components/schemas/Document"
          },
          "passport": {
            "$ref": "#/components/schemas/VaccinationPassport"
          },
          "administeredDate": {
            "type": "string",
            "example": "2020-07-21"
          },
          "status": {
            "type": "string",
            "enum": [
              "planned",
              "administered"
            ]
          },
          "attributes": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "CashOut": {
        "type": "object",
        "properties": {
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "liabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Liability"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "totalCashBenefit": {
            "type": "integer",
            "format": "currency"
          },
          "cashOutOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CashOutOption"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "AssessmentResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "score": {
            "type": "string",
            "deprecated": true,
            "description": "Use score inside outcomes"
          },
          "outcomes": {
            "type": "string",
            "additionalProperties": {
              "$ref": "#/components/schemas/AssessmentOutcome"
            }
          },
          "hidden": {
            "type": "boolean"
          },
          "physique": {
            "type": "string",
            "description": "Used for CCA only"
          },
          "physiqueText": {
            "type": "string",
            "description": "Used for CCA only"
          },
          "level": {
            "type": "string",
            "description": "Used for CCA only"
          },
          "levelText": {
            "type": "string",
            "description": "Used for CCA only"
          },
          "displayText1": {
            "type": "string"
          },
          "displayText2": {
            "type": "string"
          },
          "contents": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Used for CCA only"
          },
          "attributes": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "UserAgent": {
        "type": "object",
        "properties": {
          "appVersion": {
            "type": "string"
          },
          "isEmulator": {
            "type": "boolean"
          },
          "os": {
            "type": "string"
          },
          "appName": {
            "type": "string"
          },
          "advId": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "medium": {
            "type": "string",
            "enum": [
              "APP",
              "WEBVIEW",
              "SDK",
              "PARTNER_API",
              "RESTRICTED_APP",
              "RESTRICTED_WEBVIEW"
            ]
          },
          "tests": {
            "type": "string",
            "description": "JSON string containing tests & variants"
          },
          "appBundle": {
            "type": "string"
          },
          "utmSource": {
            "type": "string"
          },
          "utmMedium": {
            "type": "string"
          },
          "utmCampaign": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "ipAddress": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "advertiseId": {
            "type": "string"
          },
          "osVer": {
            "type": "string"
          }
        }
      },
      "Room": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "cost": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "hospital": {
            "$ref": "#/components/schemas/Hospital"
          }
        }
      },
      "DoctorAvailability": {
        "type": "object",
        "properties": {
          "consultMode": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "clinic",
                "hospital",
                "video",
                "home"
              ]
            }
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "startTime": {
            "type": "string",
            "example": "17:32:28"
          },
          "endTime": {
            "type": "string",
            "example": "17:32:28"
          },
          "dates": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "2017-07-21"
            }
          },
          "timeslots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentTime"
            }
          }
        }
      },
      "Reward": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "points": {
            "type": "string"
          },
          "platform": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "redeemed",
              "partialRedeemed",
              "new"
            ]
          },
          "expiry": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "earnedDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "redeemedDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "category": {
            "type": "string"
          },
          "icon": {
            "$ref": "#/components/schemas/Document"
          },
          "units": {
            "type": "number"
          },
          "value": {
            "type": "number",
            "format": "currency"
          },
          "usageDuration": {
            "type": "string"
          },
          "usagePeriod": {
            "type": "string"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      },
      "Liability": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "loan, policy etc."
          },
          "loan": {
            "$ref": "#/components/schemas/Loan"
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "paidToDateAdvance": {
            "type": "string"
          },
          "renewalPremium": {
            "type": "string"
          },
          "term": {
            "type": "string"
          },
          "valuation": {
            "type": "string",
            "format": "currency"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "valuation": {
            "type": "string",
            "format": "currency"
          },
          "quantity": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "Schedule": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "endDate": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "intervals": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "startTime": {
                  "type": "string",
                  "example": "17:32:28"
                },
                "endTime": {
                  "type": "string",
                  "example": "17:32:28"
                }
              }
            }
          },
          "repeat": {
            "type": "object",
            "properties": {
              "interval": {
                "type": "number"
              },
              "unit": {
                "type": "string",
                "enum": [
                  "SECOND",
                  "MINUTE",
                  "HOUR",
                  "DAY",
                  "WEEKDAY",
                  "MONTH",
                  "YEAR"
                ]
              }
            }
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleException"
            }
          },
          "cron": {
            "type": "string"
          }
        }
      },
      "Activity": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ActivityType"
          },
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metric"
            }
          },
          "defaultMetric": {
            "$ref": "#/components/schemas/Metric"
          },
          "startTime": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          },
          "endTime": {
            "type": "string",
            "example": "2017-07-21T17:32:28Z"
          }
        }
      },
      "VaccinationPassport": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "revoked": {
            "type": "boolean"
          },
          "healthcareAcredited": {
            "type": "boolean"
          }
        }
      },
      "CashOutOption": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "BANKTRANSFER",
              "EWALLETTRANSFER",
              "TOPUP",
              "PAYPREMIUM",
              "PAYLOAN",
              "REINSTATEPOLICY",
              "MATURITYBENEFIT",
              "PRUCASHBENEFIT",
              "SUSPENDAMOUNT"
            ]
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          },
          "paymentOption": {
            "$ref": "#/components/schemas/PaymentOption"
          },
          "bankAccount": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "eWallet": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          },
          "investment": {
            "$ref": "#/components/schemas/Investment"
          }
        }
      },
      "AssessmentOutcome": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number",
            "format": "float"
          },
          "level": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "AppointmentTime": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2017-07-21"
          },
          "day": {
            "type": "string",
            "description": "SUNDAY, MONDAY etc."
          },
          "startTime": {
            "type": "string",
            "example": "17:32:28"
          },
          "duration": {
            "type": "integer",
            "description": "Duration in minutes"
          },
          "endTime": {
            "type": "string",
            "example": "17:32:28"
          },
          "timeslots": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ScheduleException": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2017-07-21"
          },
          "type": {
            "type": "string",
            "enum": [
              "DELETE",
              "CHANGE"
            ]
          },
          "intervals": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "startTime": {
                  "type": "string",
                  "example": "17:32:28"
                },
                "endTime": {
                  "type": "string",
                  "example": "17:32:28"
                }
              }
            }
          }
        }
      },
      "ActivityType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "iconUrl": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          }
        }
      },
      "Investment": {
        "type": "object",
        "properties": {
          "fund": {
            "$ref": "#/components/schemas/Fund"
          },
          "units": {
            "type": "string",
            "description": "Number of units invested"
          },
          "nav": {
            "type": "string",
            "description": "Holds daily NAV or current NAV"
          },
          "navDate": {
            "type": "string",
            "example": "1970-01-01"
          },
          "fundPercentage": {
            "type": "string",
            "description": "Percentage of investment going to the fund"
          }
        }
      },
      "Metric": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "iconUrl": {
            "type": "string"
          }
        }
      },
      "Fund": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "open_ended",
              "close_ended",
              "exchange_traded",
              "unit_investment",
              "tabarru"
            ]
          },
          "plan": {
            "type": "string",
            "enum": [
              "growth",
              "divident"
            ]
          },
          "amc": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/FundValue"
          },
          "memberStats": {
            "$ref": "#/components/schemas/FundMemberStats"
          },
          "category": {
            "type": "string"
          },
          "sector": {
            "type": "string"
          },
          "isDivident": {
            "type": "boolean"
          },
          "isSharia": {
            "type": "boolean"
          },
          "launchDate": {
            "type": "string",
            "example": "2017-07-21"
          },
          "entryLoad": {
            "type": "number"
          },
          "exitLoad": {
            "type": "number"
          },
          "minimumInvestment": {
            "type": "string",
            "format": "currency"
          },
          "holdings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundHolding"
            }
          },
          "unitPrice": {
            "type": "number"
          },
          "unitPriceDate": {
            "type": "string",
            "example": "2017-07-21"
          }
        }
      },
      "FundValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "currency"
          },
          "asset": {
            "type": "string",
            "format": "currency"
          },
          "currency": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "example": "2017-07-21"
          },
          "returns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "string"
                },
                "percent": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "FundHolding": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string"
          },
          "sector": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "format": "currency"
          },
          "assetPercent": {
            "type": "number"
          }
        }
      },
      "FundMemberStats": {
        "type": "object",
        "properties": {
          "participantCount": {
            "type": "number"
          },
          "paidClaimAmount": {
            "type": "string",
            "format": "currency"
          },
          "participantContribution": {
            "type": "string",
            "format": "currency"
          },
          "numberOfClaims": {
            "type": "number"
          },
          "minThreshold": {
            "type": "number"
          },
          "maxThreshold": {
            "type": "number"
          }
        }
      },
      "QuestionAnswer": {
        "type": "object",
        "properties": {
          "question": {
            "$ref": "#/components/schemas/Question"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerOption"
            }
          }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "question": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerOption"
            }
          },
          "multichoice": {
            "type": "boolean"
          },
          "part": {
            "type": "integer",
            "format": "int32",
            "description": "Part of the question in case of multi-part"
          },
          "truefalse": {
            "type": "boolean"
          },
          "attributes": {
            "type": "string",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "xml": {
          "name": "QuestionAnswer"
        }
      },
      "AnswerOption": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "nextQuestion": {
            "$ref": "#/components/schemas/Question"
          }
        }
      },
      "ProductComponent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for coverage record. It is made up of coverage code and source system code."
          },
          "name": {
            "type": "string",
            "description": "Name of coverage"
          },
          "code": {
            "type": "string",
            "description": "The code of component Mandatory Attribute - For /proposal"
          },
          "desc": {
            "type": "string",
            "description": "Description of coverage"
          },
          "relationshipTypeName": {
            "type": "string"
          },
          "tables": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "documentTemplates": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DocumentTemplate"
            },
            "example": {
              "prop1": {
                "id": "string"
              },
              "prop2": {
                "id": "string"
              },
              "prop3": {
                "id": "string"
              }
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAttribute"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "mutuallyExclusiveWith": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MutuallyExclusiveComponents"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "selectionCriteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rule"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "insuredObjs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsuredObject"
            },
            "example": [
              {
                "id": "string"
              }
            ]
          },
          "behaviours": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "transactionContextRef": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "displayIndex": {
                  "type": "number"
                },
                "minimum": {
                  "type": "number"
                },
                "default": {
                  "type": "number"
                },
                "maximum": {
                  "type": "number"
                },
                "isViewable": {
                  "type": "boolean"
                }
              }
            }
          },
          "version": {
            "type": "string",
            "description": "Version no of same type of coverage"
          },
          "status": {
            "type": "string",
            "description": "Status of the coverage. Eg. 'Active', 'Inactive'"
          },
          "category": {
            "type": "string",
            "description": "Category of product component. Example: 'Health', 'Life', 'Investment'"
          },
          "componentType": {
            "type": "string",
            "description": "Type of product component. Example: 'ULIP', 'NON-ULIP', 'ULIP-PRUSAVER'"
          },
          "isMedical": {
            "type": "string",
            "description": "Whether medical coverage or not"
          },
          "auditDetail": {
            "$ref": "#/components/schemas/Audit"
          }
        }
      }
    }
  }
}
